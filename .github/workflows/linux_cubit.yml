name: Linux Cubit 2020

on:
  # allows us to run workflows manually
  workflow_dispatch:
  pull_request:
    branches:
      - develop
      - master
  push:
    branches:
      - develop
      - master

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  main:
    runs-on: ubuntu-20.04
    name: 'Cubit Svalinn Plugin 2020.2 Build'


    steps:
      - uses: actions/checkout@v2

      - name: Environment Variables
        run: |
          echo "CURRENT=$(pwd)" >> $GITHUB_ENV
          echo "PLUGIN_ABS_PATH=" >> $GITHUB_ENV
          echo "SCRIPTPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "PLUGIN_ABS_PATH=$GITHUB_WORKSPACE/.." >> $GITHUB_ENV

      - name: Apt dependencies
        shell: bash
        run: |
          sudo apt-get update -y
          sudo apt-get install -y g++ libtool libeigen3-dev libhdf5-dev patchelf git cmake

      - name: Trelis setup
        shell: bash
        env:   
          TRELIS_DEB_URL: ${{ secrets.LINUX_CUBIT_2020_2 }}
          TRELIS_SDK_URL: ${{ secrets.LINUX_CUBIT_SDK_2020_2 }}
        run: |
          sudo apt-get -y install libglew2.1 libglu1-mesa libopengl0 ocl-icd-libopencl1 libcxsparse3 libopenblas0

          cd ${PLUGIN_ABS_PATH}
          echo "$TRELIS_DEB_URL"
          curl -L https://uwmadison.box.com/shared/static/${TRELIS_DEB_URL}.deb --output trelis.deb
          sudo dpkg -i trelis.deb


          cd /opt
          curl -L https://uwmadison.box.com/shared/static/${TRELIS_SDK_URL}.gz --output trelis_sdk.tar.gz
          sudo tar -zxvf trelis_sdk.tar.gz
        
      - name: Build MOAB
        shell: bash
        run: |
          cd ${PLUGIN_ABS_PATH}
          mkdir -pv moab/bld
          cd moab
          git clone https://bitbucket.org/fathomteam/moab -b Version5.1.0
          cd bld
          cmake ../moab \
                -DENABLE_HDF5=ON \
                -DCMAKE_PREFIX_PATH=/usr/lib/x86_64-linux-gnu/hdf5/serial \
                -DBUILD_SHARED_LIBS=ON \
                -DENABLE_BLASLAPACK=OFF \
                -DENABLE_FORTRAN=OFF \
                -DCMAKE_INSTALL_PREFIX=${PLUGIN_ABS_PATH}/moab

          make -j`grep -c processor /proc/cpuinfo`
          make install
          cd ../..
          rm -rf moab/moab moab/bld

      - name: build DAGMC
        shell: bash
        run: |
          cd ${PLUGIN_ABS_PATH}
          mkdir -pv DAGMC/bld
          cd DAGMC
          git clone https://github.com/bam241/DAGMC -b build_exe
          cd bld
          cmake ../DAGMC \
                -DMOAB_DIR=${PLUGIN_ABS_PATH}/moab \
                -DBUILD_UWUW=ON \
                -DBUILD_TALLY=OFF \
                -DBUILD_BUILD_OBB=OFF \
                -DBUILD_MAKE_WATERTIGHT=ON \
                -DBUILD_SHARED_LIBS=ON \
                -DBUILD_STATIC_LIBS=OFF \
                -DBUILD_EXE=OFF \
                -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
                -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_INSTALL_PREFIX=${PLUGIN_ABS_PATH}/DAGMC
          make -j`grep -c processor /proc/cpuinfo`
          make install
          cd ../..
          rm -rf DAGMC/DAGMC DAGCM/bld



      - name: build plugin
        shell: bash
        run: |
          cd ${PLUGIN_ABS_PATH}
          cd Trelis-plugin
          git submodule update --init
          cd ../
          mkdir -pv bld
          cd bld
          cmake ../Trelis-plugin \
                -DCUBIT_ROOT=/opt/Trelis-17.1 \
                -DDAGMC_DIR=${PLUGIN_ABS_PATH}/DAGMC \
                -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_INSTALL_PREFIX=${PLUGIN_ABS_PATH}
          make -j`grep -c processor /proc/cpuinfo`
          make install

      - name: prepare pkg
        shell: bash
        run: |
          cd ${PLUGIN_ABS_PATH}
          mkdir -p pack/bin/plugins/svalinn
          cd pack/bin/plugins/svalinn

          # Copy all needed libraries into current directory
          cp -pPv ${PLUGIN_ABS_PATH}/lib/* .
          cp -pPv ${PLUGIN_ABS_PATH}/moab/lib/libMOAB.so* .
          cp -pPv ${PLUGIN_ABS_PATH}/DAGMC/lib/libdagmc.so* .
          cp -pPv ${PLUGIN_ABS_PATH}/DAGMC/lib/libmakeWatertight.so* .
          cp -pPv ${PLUGIN_ABS_PATH}/DAGMC/lib/libpyne_dagmc.so* .
          cp -pPv ${PLUGIN_ABS_PATH}/DAGMC/lib/libuwuw.so* .
          cp -pPv /usr/lib/x86_64-linux-gnu/libhdf5_serial.so* .
          chmod 644 *

          # Set the RPATH to be the current directory for the DAGMC libraries
          patchelf --set-rpath /opt/Trelis-17.1/bin/plugins/svalinn libMOAB.so
          patchelf --set-rpath /opt/Trelis-17.1/bin/plugins/svalinn libdagmc.so
          patchelf --set-rpath /opt/Trelis-17.1/bin/plugins/svalinn libmakeWatertight.so
          patchelf --set-rpath /opt/Trelis-17.1/bin/plugins/svalinn libpyne_dagmc.so
          patchelf --set-rpath /opt/Trelis-17.1/bin/plugins/svalinn libuwuw.so

          # Create the Svalinn plugin tarball
          cd ..
          ln -sv svalinn/libsvalinn_plugin.so .
          cd ../..
          tar --sort=name -czvf svalinn-plugin_linux_cubit_2020.2.tgz bin


      - name: 'Upload package'
        uses: actions/upload-artifact@v2
        with:
          name: svalinn-plugin_linux
          path: /home/runner/work/Trelis-plugin/pack/svalinn-plugin_linux_cubit_2020.2.tgz

